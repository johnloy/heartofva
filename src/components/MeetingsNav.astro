---
const { title, url } = Astro.props
---

<details role="list" class="MeetingsNav MegaMenu position-block">
  <summary aria-haspopup="listbox" tabindex="0" role="button">
    <span class="disclose-summary">{title}</span>
  </summary>
  <section
    role="listbox"
    aria-labelledby="meetings-nav-title"
    aria-orientation="vertical"
    class="dropdown"
  >
    <h1 id="meetings-nav-title" class="sr-only">Filter Meetings List</h1>
    <section class="weekday-filter">
      <form>
        <fieldset>
          <legend><h2>Weekday:</h2></legend>
          <div role="radiogroup">
            <label class="weekday">
              <input type="radio" name="weekday" value="0" />
              <abbr title="Sunday">S</abbr>
            </label>
            <label class="weekday">
              <input type="radio" name="weekday" value="1" />
              <abbr title="Monday">M</abbr>
            </label>
            <label class="weekday">
              <input type="radio" name="weekday" value="2" />
              <abbr title="Tuesday">T</abbr>
            </label>
            <label class="weekday">
              <input type="radio" name="weekday" value="3" />
              <abbr title="Wednesday">W</abbr>
            </label>
            <label class="weekday">
              <input type="radio" name="weekday" value="4" />
              <abbr title="Thursday">T</abbr>
            </label>
            <label class="weekday">
              <input type="radio" name="weekday" value="5" />
              <abbr title="Friday">F</abbr>
            </label>
            <label class="weekday">
              <input type="radio" name="weekday" value="6" />
              <abbr title="Saturday">S</abbr>
            </label>
          </div>
        </fieldset>
      </form>
    </section>
    <section class="locations"></section>
  </section>
</details>

<script>
  import { meetings } from '../assets/resources/meetings.js'
  import { groupBy, kebabCase } from 'lodash-es'
  import { $, $$, userTime } from '../assets/common'
  import { html, render } from 'lit'

  const WEEKDAY_NAMES = [
    'Sunday',
    'Monday',
    'Tuesday',
    'Wednesday',
    'Thursday',
    'Friday',
    'Saturday'
  ]

  const navEl = document.querySelector('.MeetingsNav')
  const summaryEl = navEl.querySelector('summary')
  const listBoxEl = navEl.querySelector('section')

  navEl.addEventListener('keydown', function(e) {
    if(e.key === 'Escape') {
      navEl.open = false
      // toggleDetails('close', e)
    }
  })

  const toggleDetails = (which, e) => {
    const isOpen = navEl.open
    if (which === 'open' && !isOpen && e.relatedTarget !== listBoxEl) {
      // navEl.open = true
      listBoxEl.classList.add('--open')
      document.body.classList.add('no-scroll')
    } else if (
      which === 'close' &&
      isOpen &&
      !navEl.contains(e.relatedTarget)
    ) {
      listBoxEl.classList.remove('--open')
      document.body.classList.remove('no-scroll')
      // setTimeout(() => (navEl.open = false), 400)
    }
  }

  navEl.addEventListener('toggle', function(e) {
    // document.body.classList.toggle('no-scroll')
    // if (!this.open) {
    //   document.body.classList.remove('no-scroll')
    //   // toggleDetails('open', e)
    //   // e.preventDefault()
    // } else {
    //   document.body.classList.add('no-scroll')
    //   // toggleDetails('close', e)
    // }
    // if (navEl.open && e.target.localName !== 'a') e.preventDefault()
  })

  const regionsByCounty = [
    [
      'Cville & Albemarle',
      [
        'Charlottesville',
        'Crozet',
        'Earlysville',
        'Greenwood',
        'Keswick',
        'North Garden',
        'Scottsville'
      ]
    ],
    [
      'Green, Madison, & Orange',
      ['Barboursville', 'Gordonsville', 'Orange', 'Ruckersville']
    ],
    ['Louisa & Fluvana', ['Louisa', 'Palmyra', 'Scottsville']],
    ['Nelson & Buckingham', ['Arrington', 'Dilwyn', 'Lovingston']]
  ]

  const renderRegionMeetings = (meetingsByLocation, weekday) => {
    const template = html`
      <h2 class="sr-only">Location</h2>
      ${regionsByCounty.map((region) => {
        return html`
          <section>
            <h3>${region[0]}</h3>
            <ul>
              ${region[1].map((location) => {
                const meetingsCount = meetingsByLocation[location]
                  ? meetingsByLocation[location].length
                  : 0
                return html`<li data-count=${meetingsCount}>
                  ${meetingsCount
                    ? html`<a
                        class="location"
                        href="/meetings?weekday=${weekday}&region=${kebabCase(
                          location
                        )}"
                        >${location}</a
                      >`
                    : html`<span class="location">${location}</span>`}<span
                    class="badge"
                    >${meetingsCount}</span
                  >
                </li>`
              })}
            </ul>
          </section>
        `
      })}
    `
    render(template, $('.locations', navEl))
  }

  const weekdayFilterFormEl = $('.MeetingsNav .weekday-filter form')

  const weekdayFilterInputs = $$('input[type="radio"]', weekdayFilterFormEl)

  const getSelectedDay = () => weekdayFilterFormEl.elements.weekday.value

  const init = async () => {
    const today = userTime().day()

    const meetingsByDay = Object.fromEntries(
      Object.entries(groupBy(await meetings, 'day')).map(
        ([day, dayMeetings]) => [day, groupBy(dayMeetings, 'region')]
      )
    )

    weekdayFilterInputs[today].checked = true

    renderRegionMeetings(
      meetingsByDay[today],
      WEEKDAY_NAMES[today].toLowerCase()
    )

    weekdayFilterFormEl.addEventListener('change', (e) => {
      console.log(WEEKDAY_NAMES[e.target.value].toLowerCase())
      renderRegionMeetings(
        meetingsByDay[e.target.value],
        WEEKDAY_NAMES[e.target.value].toLowerCase()
      )
    })
  }

  init()

  /* summaryEl.addEventListener('mouseenter', toggleDetails.bind(null, 'open')) */

  navEl.addEventListener('mousleave', toggleDetails.bind(null, 'close'))

</script>
